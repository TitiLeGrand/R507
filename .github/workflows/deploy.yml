name: Test + Deploy

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  tests:
    name: Run PHPUnit tests
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: symfony_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, intl, pdo_mysql

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Wait for MySQL
        run: |
          sudo apt-get install -y mysql-client
          until mysqladmin ping -h 127.0.0.1 --silent; do
            echo "Waiting for MySQL..."
            sleep 2
          done

      - name: Create test database schema
        env:
          DATABASE_URL: "mysql://root:root@127.0.0.1:3306/symfony_test"
        run: |
          php bin/console doctrine:database:create --env=test --if-not-exists
          php bin/console doctrine:schema:create --env=test

      - name: Run PHPUnit tests
        env:
          DATABASE_URL: "mysql://root:root@127.0.0.1:3306/symfony_test"
        run: vendor/bin/phpunit



  deploy:
    name: Deploy to FTP
    runs-on: ubuntu-latest
    needs: tests   # vérifie que les test sont bien passé
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Install dependencies
        run: composer install --no-dev --optimize-autoloader

      - name: deploy via FTP 
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_HOST }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          port: ${{ secrets.FTP_PORT }}
          protocol: ftp
          local-dir: ./
          server-dir: /www/ 
          dangerous-clean-slate: true  # Supprime tout le contenu du ftp avant upload
          exclude: |
            **/.git*
            **/.github*
            **/tests*
            **/var/*
            composer.json
            composer.lock
